# Makefile.in generated by automake 1.7.9 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



srcdir = .
top_srcdir = ..

pkgdatadir = $(datadir)/supertux
pkglibdir = $(libdir)/supertux
pkgincludedir = $(includedir)/supertux
top_builddir = ..

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_triplet = x86_64-unknown-linux-gnu
ACLOCAL = ${SHELL} /home/lars/Projekte/supertux-0.1.3/missing --run aclocal-1.7
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /home/lars/Projekte/supertux-0.1.3/missing --run tar
AUTOCONF = ${SHELL} /home/lars/Projekte/supertux-0.1.3/missing --run autoconf
AUTOHEADER = ${SHELL} /home/lars/Projekte/supertux-0.1.3/missing --run autoheader
AUTOMAKE = ${SHELL} /home/lars/Projekte/supertux-0.1.3/missing --run automake-1.7
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2 -I/usr/include/SDL -D_GNU_SOURCE=1 -D_REENTRANT 
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2 -I/usr/include/SDL -D_GNU_SOURCE=1 -D_REENTRANT  -DDATA_PREFIX='"${prefix}/share/supertux"'
CYGPATH_W = echo
DEFS = -DPACKAGE_NAME=\"SuperTux\" -DPACKAGE_TARNAME=\"supertux\" -DPACKAGE_VERSION=\"0.1.3\" -DPACKAGE_STRING=\"SuperTux\ 0.1.3\" -DPACKAGE_BUGREPORT=\"\" -DPACKAGE=\"supertux\" -DVERSION=\"0.1.3\" -DHAVE_DIRENT_H=1 -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_UNISTD_H=1 -DHAVE_LIBSDL_MIXER=1 -DHAVE_LIBSDL_IMAGE=1 -DHAVE_PTHREAD=1 -DHAVE_LIBZ=1 -DHAVE_MKDIR=1 -DHAVE_STRDUP=1 -DHAVE_STRSTR=1 
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = grep -E
EXEEXT = 
GL_CFLAGS = 
GL_LIBS = -lGL  -lm
GREP = @GREP@
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = -lz -lSDL_image -lSDL_mixer  -lpthread  -L/usr/lib -lSDL -lGL  -lm
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/lars/Projekte/supertux-0.1.3/missing --run makeinfo
OBJEXT = o
PACKAGE = supertux
PACKAGE_BUGREPORT = 
PACKAGE_NAME = SuperTux
PACKAGE_STRING = SuperTux 0.1.3
PACKAGE_TARNAME = supertux
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = 0.1.3
PATH_SEPARATOR = :
PTHREAD_CC = gcc
PTHREAD_CFLAGS = 
PTHREAD_LIBS = 
SDL_CFLAGS = -I/usr/include/SDL -D_GNU_SOURCE=1 -D_REENTRANT
SDL_CONFIG = /usr/bin/sdl-config
SDL_LIBS = -L/usr/lib -lSDL
SET_MAKE = 
SHELL = /bin/bash
STRIP = 
VERSION = 0.1.3
XMKMF = @XMKMF@
ac_ct_CC = gcc
ac_ct_CXX = g++
acx_pthread_config = 
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
datadir = ${prefix}/share
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = @htmldir@
includedir = ${prefix}/include
infodir = ${prefix}/info
install_sh = /home/lars/Projekte/supertux-0.1.3/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = @localedir@
localstatedir = ${prefix}/var
mandir = ${prefix}/man
oldincludedir = /usr/include
pdfdir = @pdfdir@
prefix = /usr/local
program_transform_name = s,x,x,
psdir = @psdir@
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target = x86_64-unknown-linux-gnu
target_alias = 
target_cpu = x86_64
target_os = linux-gnu
target_vendor = unknown
bin_PROGRAMS = supertux testclassification recordgestures printrawsensors configureclassification

supertux_SOURCES = \
badguy.cpp \
badguy.h \
bitmask.cpp \
bitmask.h \
button.cpp \
button.h \
collision.cpp \
collision.h \
configfile.cpp \
configfile.h \
intro.cpp \
intro.h \
defines.h \
gameloop.cpp \
gameloop.h \
globals.cpp \
globals.h \
high_scores.cpp \
high_scores.h \
level.cpp \
level.h \
leveleditor.cpp \
leveleditor.h \
lispreader.cpp \
lispreader.h \
menu.cpp \
menu.h \
particlesystem.cpp \
particlesystem.h \
physic.cpp \
physic.h \
player.cpp \
player.h \
scene.cpp \
scene.h \
screen.cpp \
screen.h \
setup.cpp \
setup.h \
sound.cpp \
sound.h \
special.cpp \
special.h \
text.cpp \
text.h \
texture.cpp \
texture.h \
timer.cpp \
timer.h \
title.cpp \
title.h \
type.cpp \
type.h \
world.cpp \
world.h \
worldmap.cpp \
worldmap.h \
tile.h \
tile.cpp \
mousecursor.cpp \
mousecursor.h \
resources.h \
resources.cpp \
gameobjs.h \
gameobjs.cpp \
sprite.h \
sprite.cpp \
sprite_manager.cpp \
sprite_manager.h \
music_manager.cpp \
music_manager.h \
musicref.cpp \
musicref.h \
Defines.h \
Defines.cpp \
Helper.h \
Helper.cpp \
Helper-Templates.cpp2 \
IntSource.h \
IntSource.cpp \
RoggenSensor.h \
RoggenSensor.cpp \
RoggenSensorFusion.h \
RoggenSensorFusion.cpp \
RoggenDataExtension.h \
RoggenDataExtension.cpp \
RoggenBuffer.h \
RoggenBuffer.cpp \
LearningAlgorithm.h \
LearningAlgorithm.cpp \
NearestClusterCenter.h \
NearestClusterCenter.cpp \
RoggenFeatureExtraction.h \
RoggenFeatureExtraction.cpp \
XmlFileHandling.h \
XmlFileHandling.cpp \
Configuration.h \
Configuration.cpp \
FrameParser2.h \
FrameParser2.cpp \
DataStrings.h \
DataStrings.cpp \
tinyxml.h \
tinyxml.cpp \
tinystr.h \
tinystr.cpp \
tinyxmlerror.cpp \
tinyxmlparser.cpp \
cmdline.h \
cmdline.cpp \
GestureManagement.h \
GestureManagement.cpp \
Mutex.h \
Mutex.cpp \
Thread.h \
Thread.cpp \
TuxControl.h \
TuxControl.cpp \
ClassificationTux.h \
ClassificationTux.cpp \
TuxControlSingleton.h \
TuxControlSingleton.cpp \
Repercussion.h \
Repercussion.cpp \
supertux.cpp 


testclassification_SOURCES = \
Defines.h \
Defines.cpp \
Helper.h \
Helper.cpp \
Helper-Templates.cpp2 \
IntSource.h \
IntSource.cpp \
RoggenSensor.h \
RoggenSensor.cpp \
RoggenSensorFusion.h \
RoggenSensorFusion.cpp \
RoggenDataExtension.h \
RoggenDataExtension.cpp \
RoggenBuffer.h \
RoggenBuffer.cpp \
LearningAlgorithm.h \
LearningAlgorithm.cpp \
NearestClusterCenter.h \
NearestClusterCenter.cpp \
RoggenFeatureExtraction.h \
RoggenFeatureExtraction.cpp \
XmlFileHandling.h \
XmlFileHandling.cpp \
Configuration.h \
Configuration.cpp \
FrameParser2.h \
FrameParser2.cpp \
DataStrings.h \
DataStrings.cpp \
tinyxml.h \
tinyxml.cpp \
tinystr.h \
tinystr.cpp \
tinyxmlerror.cpp \
tinyxmlparser.cpp \
cmdline.h \
cmdline.cpp \
GestureManagement.h \
GestureManagement.cpp \
Mutex.h \
Mutex.cpp \
Thread.h \
Thread.cpp \
TuxControl.h \
TuxControl.cpp \
ClassificationTux.h \
ClassificationTux.cpp \
TuxControlSingleton.h \
TuxControlSingleton.cpp \
Repercussion.h \
Repercussion.cpp \
TestClassification.cpp


recordgestures_SOURCES = \
Defines.h \
Defines.cpp \
Helper.h \
Helper.cpp \
Helper-Templates.cpp2 \
Mutex.h \
Mutex.cpp \
Thread.h \
Thread.cpp \
IntSource.h \
IntSource.cpp \
RoggenSensor.h \
RoggenSensor.cpp \
RoggenSensorFusion.h \
RoggenSensorFusion.cpp \
RoggenDataExtension.h \
RoggenDataExtension.cpp \
RoggenBuffer.h \
RoggenBuffer.cpp \
LearningAlgorithm.h \
LearningAlgorithm.cpp \
NearestClusterCenter.h \
NearestClusterCenter.cpp \
RoggenFeatureExtraction.h \
RoggenFeatureExtraction.cpp \
XmlFileHandling.h \
XmlFileHandling.cpp \
Configuration.h \
Configuration.cpp \
FrameParser2.h \
FrameParser2.cpp \
DataStrings.h \
DataStrings.cpp \
tinyxml.h \
tinyxml.cpp \
tinystr.h \
tinystr.cpp \
tinyxmlerror.cpp \
tinyxmlparser.cpp \
cmdline.h \
cmdline.cpp \
GestureManagement.h \
GestureManagement.cpp \
Repercussion.h \
Repercussion.cpp \
RecordGestures.cpp


printrawsensors_SOURCES = \
Defines.h \
Defines.cpp \
Helper.h \
Helper.cpp \
Helper-Templates.cpp2 \
Mutex.h \
Mutex.cpp \
IntSource.h \
IntSource.cpp \
RoggenSensor.h \
RoggenSensor.cpp \
RoggenSensorFusion.h \
RoggenSensorFusion.cpp \
RoggenDataExtension.h \
RoggenDataExtension.cpp \
XmlFileHandling.h \
XmlFileHandling.cpp \
Configuration.h \
Configuration.cpp \
FrameParser2.h \
FrameParser2.cpp \
DataStrings.h \
DataStrings.cpp \
tinyxml.h \
tinyxml.cpp \
tinystr.h \
tinystr.cpp \
tinyxmlerror.cpp \
tinyxmlparser.cpp \
cmdline.h \
cmdline.cpp \
PrintRawSensors.cpp


configureclassification_SOURCES = \
Defines.h \
Defines.cpp \
Helper.h \
Helper.cpp \
Helper-Templates.cpp2 \
XmlFileHandling.h \
XmlFileHandling.cpp \
Configuration.h \
Configuration.cpp \
tinyxml.h \
tinyxml.cpp \
tinystr.h \
tinystr.cpp \
tinyxmlerror.cpp \
tinyxmlparser.cpp \
Mutex.h \
Mutex.cpp \
Thread.h \
Thread.cpp \
ConfigureClassification.cpp

subdir = src
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_CLEAN_FILES =
bin_PROGRAMS = supertux$(EXEEXT) testclassification$(EXEEXT) \
	recordgestures$(EXEEXT) printrawsensors$(EXEEXT) \
	configureclassification$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS)

am_configureclassification_OBJECTS = Defines.$(OBJEXT) Helper.$(OBJEXT) \
	XmlFileHandling.$(OBJEXT) Configuration.$(OBJEXT) \
	tinyxml.$(OBJEXT) tinystr.$(OBJEXT) tinyxmlerror.$(OBJEXT) \
	tinyxmlparser.$(OBJEXT) Mutex.$(OBJEXT) Thread.$(OBJEXT) \
	ConfigureClassification.$(OBJEXT)
configureclassification_OBJECTS = $(am_configureclassification_OBJECTS)
configureclassification_LDADD = $(LDADD)
configureclassification_DEPENDENCIES =
configureclassification_LDFLAGS =
am_printrawsensors_OBJECTS = Defines.$(OBJEXT) Helper.$(OBJEXT) \
	Mutex.$(OBJEXT) IntSource.$(OBJEXT) RoggenSensor.$(OBJEXT) \
	RoggenSensorFusion.$(OBJEXT) RoggenDataExtension.$(OBJEXT) \
	XmlFileHandling.$(OBJEXT) Configuration.$(OBJEXT) \
	FrameParser2.$(OBJEXT) DataStrings.$(OBJEXT) tinyxml.$(OBJEXT) \
	tinystr.$(OBJEXT) tinyxmlerror.$(OBJEXT) \
	tinyxmlparser.$(OBJEXT) cmdline.$(OBJEXT) \
	PrintRawSensors.$(OBJEXT)
printrawsensors_OBJECTS = $(am_printrawsensors_OBJECTS)
printrawsensors_LDADD = $(LDADD)
printrawsensors_DEPENDENCIES =
printrawsensors_LDFLAGS =
am_recordgestures_OBJECTS = Defines.$(OBJEXT) Helper.$(OBJEXT) \
	Mutex.$(OBJEXT) Thread.$(OBJEXT) IntSource.$(OBJEXT) \
	RoggenSensor.$(OBJEXT) RoggenSensorFusion.$(OBJEXT) \
	RoggenDataExtension.$(OBJEXT) RoggenBuffer.$(OBJEXT) \
	LearningAlgorithm.$(OBJEXT) NearestClusterCenter.$(OBJEXT) \
	RoggenFeatureExtraction.$(OBJEXT) XmlFileHandling.$(OBJEXT) \
	Configuration.$(OBJEXT) FrameParser2.$(OBJEXT) \
	DataStrings.$(OBJEXT) tinyxml.$(OBJEXT) tinystr.$(OBJEXT) \
	tinyxmlerror.$(OBJEXT) tinyxmlparser.$(OBJEXT) \
	cmdline.$(OBJEXT) GestureManagement.$(OBJEXT) \
	Repercussion.$(OBJEXT) RecordGestures.$(OBJEXT)
recordgestures_OBJECTS = $(am_recordgestures_OBJECTS)
recordgestures_LDADD = $(LDADD)
recordgestures_DEPENDENCIES =
recordgestures_LDFLAGS =
am_supertux_OBJECTS = badguy.$(OBJEXT) bitmask.$(OBJEXT) \
	button.$(OBJEXT) collision.$(OBJEXT) configfile.$(OBJEXT) \
	intro.$(OBJEXT) gameloop.$(OBJEXT) globals.$(OBJEXT) \
	high_scores.$(OBJEXT) level.$(OBJEXT) leveleditor.$(OBJEXT) \
	lispreader.$(OBJEXT) menu.$(OBJEXT) particlesystem.$(OBJEXT) \
	physic.$(OBJEXT) player.$(OBJEXT) scene.$(OBJEXT) \
	screen.$(OBJEXT) setup.$(OBJEXT) sound.$(OBJEXT) \
	special.$(OBJEXT) text.$(OBJEXT) texture.$(OBJEXT) \
	timer.$(OBJEXT) title.$(OBJEXT) type.$(OBJEXT) world.$(OBJEXT) \
	worldmap.$(OBJEXT) tile.$(OBJEXT) mousecursor.$(OBJEXT) \
	resources.$(OBJEXT) gameobjs.$(OBJEXT) sprite.$(OBJEXT) \
	sprite_manager.$(OBJEXT) music_manager.$(OBJEXT) \
	musicref.$(OBJEXT) Defines.$(OBJEXT) Helper.$(OBJEXT) \
	IntSource.$(OBJEXT) RoggenSensor.$(OBJEXT) \
	RoggenSensorFusion.$(OBJEXT) RoggenDataExtension.$(OBJEXT) \
	RoggenBuffer.$(OBJEXT) LearningAlgorithm.$(OBJEXT) \
	NearestClusterCenter.$(OBJEXT) \
	RoggenFeatureExtraction.$(OBJEXT) XmlFileHandling.$(OBJEXT) \
	Configuration.$(OBJEXT) FrameParser2.$(OBJEXT) \
	DataStrings.$(OBJEXT) tinyxml.$(OBJEXT) tinystr.$(OBJEXT) \
	tinyxmlerror.$(OBJEXT) tinyxmlparser.$(OBJEXT) \
	cmdline.$(OBJEXT) GestureManagement.$(OBJEXT) Mutex.$(OBJEXT) \
	Thread.$(OBJEXT) TuxControl.$(OBJEXT) \
	ClassificationTux.$(OBJEXT) TuxControlSingleton.$(OBJEXT) \
	Repercussion.$(OBJEXT) supertux.$(OBJEXT)
supertux_OBJECTS = $(am_supertux_OBJECTS)
supertux_LDADD = $(LDADD)
supertux_DEPENDENCIES =
supertux_LDFLAGS =
am_testclassification_OBJECTS = Defines.$(OBJEXT) Helper.$(OBJEXT) \
	IntSource.$(OBJEXT) RoggenSensor.$(OBJEXT) \
	RoggenSensorFusion.$(OBJEXT) RoggenDataExtension.$(OBJEXT) \
	RoggenBuffer.$(OBJEXT) LearningAlgorithm.$(OBJEXT) \
	NearestClusterCenter.$(OBJEXT) \
	RoggenFeatureExtraction.$(OBJEXT) XmlFileHandling.$(OBJEXT) \
	Configuration.$(OBJEXT) FrameParser2.$(OBJEXT) \
	DataStrings.$(OBJEXT) tinyxml.$(OBJEXT) tinystr.$(OBJEXT) \
	tinyxmlerror.$(OBJEXT) tinyxmlparser.$(OBJEXT) \
	cmdline.$(OBJEXT) GestureManagement.$(OBJEXT) Mutex.$(OBJEXT) \
	Thread.$(OBJEXT) TuxControl.$(OBJEXT) \
	ClassificationTux.$(OBJEXT) TuxControlSingleton.$(OBJEXT) \
	Repercussion.$(OBJEXT) TestClassification.$(OBJEXT)
testclassification_OBJECTS = $(am_testclassification_OBJECTS)
testclassification_LDADD = $(LDADD)
testclassification_DEPENDENCIES =
testclassification_LDFLAGS =

DEFAULT_INCLUDES =  -I. -I$(srcdir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
DEP_FILES = ./$(DEPDIR)/ClassificationTux.Po \
	./$(DEPDIR)/Configuration.Po \
	./$(DEPDIR)/ConfigureClassification.Po \
	./$(DEPDIR)/DataStrings.Po ./$(DEPDIR)/Defines.Po \
	./$(DEPDIR)/FrameParser2.Po \
	./$(DEPDIR)/GestureManagement.Po \
	./$(DEPDIR)/Helper.Po ./$(DEPDIR)/IntSource.Po \
	./$(DEPDIR)/LearningAlgorithm.Po \
	./$(DEPDIR)/Mutex.Po \
	./$(DEPDIR)/NearestClusterCenter.Po \
	./$(DEPDIR)/PrintRawSensors.Po \
	./$(DEPDIR)/RecordGestures.Po \
	./$(DEPDIR)/Repercussion.Po \
	./$(DEPDIR)/RoggenBuffer.Po \
	./$(DEPDIR)/RoggenDataExtension.Po \
	./$(DEPDIR)/RoggenFeatureExtraction.Po \
	./$(DEPDIR)/RoggenSensor.Po \
	./$(DEPDIR)/RoggenSensorFusion.Po \
	./$(DEPDIR)/TestClassification.Po \
	./$(DEPDIR)/Thread.Po ./$(DEPDIR)/TuxControl.Po \
	./$(DEPDIR)/TuxControlSingleton.Po \
	./$(DEPDIR)/XmlFileHandling.Po \
	./$(DEPDIR)/badguy.Po ./$(DEPDIR)/bitmask.Po \
	./$(DEPDIR)/button.Po ./$(DEPDIR)/cmdline.Po \
	./$(DEPDIR)/collision.Po ./$(DEPDIR)/configfile.Po \
	./$(DEPDIR)/gameloop.Po ./$(DEPDIR)/gameobjs.Po \
	./$(DEPDIR)/globals.Po ./$(DEPDIR)/high_scores.Po \
	./$(DEPDIR)/intro.Po ./$(DEPDIR)/level.Po \
	./$(DEPDIR)/leveleditor.Po \
	./$(DEPDIR)/lispreader.Po ./$(DEPDIR)/menu.Po \
	./$(DEPDIR)/mousecursor.Po \
	./$(DEPDIR)/music_manager.Po \
	./$(DEPDIR)/musicref.Po \
	./$(DEPDIR)/particlesystem.Po ./$(DEPDIR)/physic.Po \
	./$(DEPDIR)/player.Po ./$(DEPDIR)/resources.Po \
	./$(DEPDIR)/scene.Po ./$(DEPDIR)/screen.Po \
	./$(DEPDIR)/setup.Po ./$(DEPDIR)/sound.Po \
	./$(DEPDIR)/special.Po ./$(DEPDIR)/sprite.Po \
	./$(DEPDIR)/sprite_manager.Po \
	./$(DEPDIR)/supertux.Po ./$(DEPDIR)/text.Po \
	./$(DEPDIR)/texture.Po ./$(DEPDIR)/tile.Po \
	./$(DEPDIR)/timer.Po ./$(DEPDIR)/tinystr.Po \
	./$(DEPDIR)/tinyxml.Po ./$(DEPDIR)/tinyxmlerror.Po \
	./$(DEPDIR)/tinyxmlparser.Po ./$(DEPDIR)/title.Po \
	./$(DEPDIR)/type.Po ./$(DEPDIR)/world.Po \
	./$(DEPDIR)/worldmap.Po
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
DIST_SOURCES = $(configureclassification_SOURCES) \
	$(printrawsensors_SOURCES) $(recordgestures_SOURCES) \
	$(supertux_SOURCES) $(testclassification_SOURCES)
DIST_COMMON = $(srcdir)/Makefile.in Makefile.am
SOURCES = $(configureclassification_SOURCES) $(printrawsensors_SOURCES) $(recordgestures_SOURCES) $(supertux_SOURCES) $(testclassification_SOURCES)

all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .o .obj
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.ac $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Makefile
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f"; \
	   $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f $(DESTDIR)$(bindir)/$$f"; \
	  rm -f $(DESTDIR)$(bindir)/$$f; \
	done

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
configureclassification$(EXEEXT): $(configureclassification_OBJECTS) $(configureclassification_DEPENDENCIES) 
	@rm -f configureclassification$(EXEEXT)
	$(CXXLINK) $(configureclassification_LDFLAGS) $(configureclassification_OBJECTS) $(configureclassification_LDADD) $(LIBS)
printrawsensors$(EXEEXT): $(printrawsensors_OBJECTS) $(printrawsensors_DEPENDENCIES) 
	@rm -f printrawsensors$(EXEEXT)
	$(CXXLINK) $(printrawsensors_LDFLAGS) $(printrawsensors_OBJECTS) $(printrawsensors_LDADD) $(LIBS)
recordgestures$(EXEEXT): $(recordgestures_OBJECTS) $(recordgestures_DEPENDENCIES) 
	@rm -f recordgestures$(EXEEXT)
	$(CXXLINK) $(recordgestures_LDFLAGS) $(recordgestures_OBJECTS) $(recordgestures_LDADD) $(LIBS)
supertux$(EXEEXT): $(supertux_OBJECTS) $(supertux_DEPENDENCIES) 
	@rm -f supertux$(EXEEXT)
	$(CXXLINK) $(supertux_LDFLAGS) $(supertux_OBJECTS) $(supertux_LDADD) $(LIBS)
testclassification$(EXEEXT): $(testclassification_OBJECTS) $(testclassification_DEPENDENCIES) 
	@rm -f testclassification$(EXEEXT)
	$(CXXLINK) $(testclassification_LDFLAGS) $(testclassification_OBJECTS) $(testclassification_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/ClassificationTux.Po
include ./$(DEPDIR)/Configuration.Po
include ./$(DEPDIR)/ConfigureClassification.Po
include ./$(DEPDIR)/DataStrings.Po
include ./$(DEPDIR)/Defines.Po
include ./$(DEPDIR)/FrameParser2.Po
include ./$(DEPDIR)/GestureManagement.Po
include ./$(DEPDIR)/Helper.Po
include ./$(DEPDIR)/IntSource.Po
include ./$(DEPDIR)/LearningAlgorithm.Po
include ./$(DEPDIR)/Mutex.Po
include ./$(DEPDIR)/NearestClusterCenter.Po
include ./$(DEPDIR)/PrintRawSensors.Po
include ./$(DEPDIR)/RecordGestures.Po
include ./$(DEPDIR)/Repercussion.Po
include ./$(DEPDIR)/RoggenBuffer.Po
include ./$(DEPDIR)/RoggenDataExtension.Po
include ./$(DEPDIR)/RoggenFeatureExtraction.Po
include ./$(DEPDIR)/RoggenSensor.Po
include ./$(DEPDIR)/RoggenSensorFusion.Po
include ./$(DEPDIR)/TestClassification.Po
include ./$(DEPDIR)/Thread.Po
include ./$(DEPDIR)/TuxControl.Po
include ./$(DEPDIR)/TuxControlSingleton.Po
include ./$(DEPDIR)/XmlFileHandling.Po
include ./$(DEPDIR)/badguy.Po
include ./$(DEPDIR)/bitmask.Po
include ./$(DEPDIR)/button.Po
include ./$(DEPDIR)/cmdline.Po
include ./$(DEPDIR)/collision.Po
include ./$(DEPDIR)/configfile.Po
include ./$(DEPDIR)/gameloop.Po
include ./$(DEPDIR)/gameobjs.Po
include ./$(DEPDIR)/globals.Po
include ./$(DEPDIR)/high_scores.Po
include ./$(DEPDIR)/intro.Po
include ./$(DEPDIR)/level.Po
include ./$(DEPDIR)/leveleditor.Po
include ./$(DEPDIR)/lispreader.Po
include ./$(DEPDIR)/menu.Po
include ./$(DEPDIR)/mousecursor.Po
include ./$(DEPDIR)/music_manager.Po
include ./$(DEPDIR)/musicref.Po
include ./$(DEPDIR)/particlesystem.Po
include ./$(DEPDIR)/physic.Po
include ./$(DEPDIR)/player.Po
include ./$(DEPDIR)/resources.Po
include ./$(DEPDIR)/scene.Po
include ./$(DEPDIR)/screen.Po
include ./$(DEPDIR)/setup.Po
include ./$(DEPDIR)/sound.Po
include ./$(DEPDIR)/special.Po
include ./$(DEPDIR)/sprite.Po
include ./$(DEPDIR)/sprite_manager.Po
include ./$(DEPDIR)/supertux.Po
include ./$(DEPDIR)/text.Po
include ./$(DEPDIR)/texture.Po
include ./$(DEPDIR)/tile.Po
include ./$(DEPDIR)/timer.Po
include ./$(DEPDIR)/tinystr.Po
include ./$(DEPDIR)/tinyxml.Po
include ./$(DEPDIR)/tinyxmlerror.Po
include ./$(DEPDIR)/tinyxmlparser.Po
include ./$(DEPDIR)/title.Po
include ./$(DEPDIR)/type.Po
include ./$(DEPDIR)/world.Po
include ./$(DEPDIR)/worldmap.Po

.cpp.o:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

.cpp.obj:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`
uninstall-info-am:

ETAGS = etags
ETAGSFLAGS =

CTAGS = ctags
CTAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)

installdirs:
	$(mkinstalldirs) $(DESTDIR)$(bindir)
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am:

install-exec-am: install-binPROGRAMS

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-info-am

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic ctags distclean distclean-compile \
	distclean-generic distclean-tags distdir dvi dvi-am info \
	info-am install install-am install-binPROGRAMS install-data \
	install-data-am install-exec install-exec-am install-info \
	install-info-am install-man install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-binPROGRAMS uninstall-info-am


# EOF #
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
